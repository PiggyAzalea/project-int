pipeline {
    agent {
        docker {
            image 'exaclly/jenkins-agent'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    options {
        buildDiscarder(logRotator(daysToKeepStr: '30'))
        disableConcurrentBuilds()
        timestamps()
    }

    environment {
        JENKINS_IMG_NAME = "jenkins-agent:${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USERNAME', passwordVariable: 'USERPASS')]) {
                    script {
                        sh '''
                            echo $USERPASS | docker login -u $USERNAME --password-stdin
                            docker build -t $JENKINS_IMG_NAME -f Dockerfile.agent .
                            docker tag $JENKINS_IMG_NAME exaclly/$JENKINS_IMG_NAME
                            docker push exaclly/$JENKINS_IMG_NAME
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                // Enable diagnostic mode
                sh 'java -Dorg.jenkinsci.plugins.durabletask.BourneShellScript.LAUNCH_DIAGNOSTICS=true'

                // Clean up workspace
                cleanWs()

                // Remove Docker images with diagnostics
                sh '''
                    docker rmi $JENKINS_IMG_NAME || echo "Failed to remove image: $JENKINS_IMG_NAME"
                    docker rmi exaclly/$JENKINS_IMG_NAME || echo "Failed to remove image: exaclly/$JENKINS_IMG_NAME"
                '''
            }
        }
    }
}
